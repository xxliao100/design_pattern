package com.xxliao.pattern.creational.prototype;

/**
 * @author xxliao
 * @description: 设计模式-创建型模式-原型模式
 *
 * 定义： 原型模式是指：用原型实例指定创建对象的种类，并且通过拷贝这些原型，创建新的对象。
 * 工作原理：原型模式创建新的对象，其本质就是克隆，也就是 对象.clone()；
 *
 * 接口：
 * Prototype：原型类，神明一个克隆自己的接口，Java语言中 顶级类Object默认有clone()；
 * ConcretePrototype：具体的原型类，实现一个克隆自己的操作。
 * Client：让一个原型对象克隆自己，从而创建一个新的对象。
 *
 * 实际使用：Spring框架中 getBean 中根据配置文件可以选择bean的单例创建模式或者原型模式。
 *
 *
 * 关于拷贝：
 * 1.浅拷贝：
 *  对于数据类型是基本类型的成员变量，浅拷贝会直接进行值传递，也就是将该属性复制一份给新的对象。
 *  对于数据类型是引用类型的成员变量，浅拷贝会进行引用传递，也就是将该成员变量的内存地址复制一份给新的对象。
 * 2.深拷贝：
 *  复制对象的所有基础数据类型的成员变量值，为所有引用数据类型的成员变量申请存储空间，并复制每一个引用数据类型变量所引用的对象。
 *
 *  深拷贝实现方式：1.重写clone方法，2.通过对象序列化实现。
 *
 *
 * @date 2024/5/23 23:24
 */

public class PrototypePattern {
}
