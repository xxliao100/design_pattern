package com.xxliao.pattern.behavioral.state;

/**
 * @author xxliao
 * @description: 设计模式 - 行为型模式 -状态模式
 *
 * 定义：状态模式主要用于解决 对象在多种状态转换时候，需要对外输出不同的行为的问题。状态和行为是一一对应的，状态之间可以相互转换。
 *
 * 结构：
 * 1.环境角色（Context）：用户维护State实例，这个实例定义当前状态。
 * 2.抽象状态角色（State）:定义一个接口封装与环境角色的一个特点接口相关行为。
 * 3.具体状态角色（Concrete State）：每一个自来实现一个月环境角色的一个状态相关行为
 * @date 2024/5/26 23:26
 */

public class StatePattern {
}
