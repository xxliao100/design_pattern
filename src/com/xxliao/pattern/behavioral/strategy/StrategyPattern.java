package com.xxliao.pattern.behavioral.strategy;

/**
 * @author xxliao
 * @description: 设计模式 - 行为型模式 - 策略模式
 *
 * 定义：定义一些列算法，并将每个算法封装起来，是它们可以相互替换，且算法的变化不会影响使用算法的客户。
 *
 * 结构：
 * 1.抽象策略类角色（Abstract Strategy）：抽象角色，一般是接口或者抽象类，定义出具体策略角色所需要的接口。
 * 2.具体策略类角色（Concrete Strategy）:实现了抽象策略定义的接口，提供具体的算法实现。
 * 3.环境角色（Context）：持有一个策略类的引用，最终给客户端使用。
 *
 * @date 2024/5/26 23:39
 */
public class StrategyPattern {

}
