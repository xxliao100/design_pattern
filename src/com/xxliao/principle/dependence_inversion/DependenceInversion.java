package com.xxliao.principle.dependence_inversion;

/**
 *
 * @description: 依赖倒转原则
 *
 * 定义：
 * 1.高层模块不应该依赖底层模块，二者都应该依赖其抽象，在Java中抽象就是指接口（Interface）和抽象类（Abstract Class）
 * 2.抽象不应该依赖细节，细节应该依赖抽象。
 * 3.依赖倒转的中心思想是 面向接口编程。
 *
 * 4.依赖倒转原则的设计理念是：相对于细节（具体实现类）的多变性，接口和抽象类要稳定得多。以抽象为基础搭建的架构要比以细节搭建的架构稳定得多。
 * 5.使用接口或者抽象类的目的是制定好规范，不会涉及任何具体的操作，把展示细节交给具体实现类去完成。
 *
 * @author xxliao
 * @date 2024/5/21 23:28
 */

public class DependenceInversion {
}
